{% set name = "opentsne" %}
{% set version = "1.0.2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: e2aecaa7a487100246f2d3fef9855d1bd6cc02a1c6da8fb2a54583f307aa4229
  patches:
    - patches/0001-fixed-test_neighbors-import.patch

build:
  number: 0
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  skip: true  # [py<39]

requirements:
  build:
    # comiler c needs by cython
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - patch  # [not win]
    - m2-patch  # [win]
  host:
    - pip
    - python
    - setuptools
    - wheel
    - cython
    - numpy {{ numpy }}
    - fftw 3.3.9
  run:
    - python
    #_openmp_mutex AND llvm-openmp needs to avoid run_exports problem
    - _openmp_mutex  # [linux]
    - llvm-openmp    # [osx]
    - numpy >=1.16.6
    - scikit-learn >=0.20
    - scipy
  run_constrained:
    - hnswlib >=0.4.0,<0.5.0
    - pynndescent >=0.5.0,<0.6.0

# > np.testing.assert_almost_equal(embedding1, embedding2)
# E AssertionError:
# E Arrays are not almost equal to 7 decimals
{% set deselect_tests = "" %}
{% set deselect_tests = " --deselect=tests/test_correctness.py::TestTSNECorrectnessUsingPrecomputedDistanceMatrix::test_iris" %}  # [linux and aarch64]

test:
  source_files:
    - tests
  imports:
    - openTSNE
  commands:
    - pip check
    - pytest -vv {{ deselect_tests }} tests
  requires:
    - pip
    - pytest

about:
  home: https://github.com/pavlin-policar/openTSNE
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: Extensible, parallel implementations of t-SNE
  description: |
    openTSNE is a modular Python implementation of t-Distributed Stochasitc Neighbor Embedding (t-SNE),
    a popular dimensionality-reduction algorithm for visualizing high-dimensional data sets.
    openTSNE incorporates the latest improvements to the t-SNE algorithm, including the ability to add
    new data points to existing embeddings, massive speed improvements, enabling t-SNE to
    scale to millions of data points and various tricks to improve global alignment of the resulting
    visualizations.
  doc_url: https://opentsne.readthedocs.io
  dev_url: https://github.com/pavlin-policar/openTSNE

extra:
  recipe-maintainers:
    - pavlin-policar
